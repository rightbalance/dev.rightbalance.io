[{"data":1,"prerenderedAt":218},["Reactive",2],{"learn":3},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":9,"draft":6,"tags":10,"related_content":13,"short_title":14,"header_one":15,"header_two":16,"header_three":7,"cta_header":17,"cta_button":7,"cta_href":7,"icon":18,"icons":19,"image_url":7,"body":20,"_type":213,"_id":214,"_source":215,"_file":216,"_extension":217},"/learn/how-to-reduce-manual-qa-increase-product-quality-and-iterate-faster","learn",false,"","How to Reduce Manual QA, Increase Product Quality, and Iterate Faster","Product development is a very complex task involving ideation, product and project management, design, software engineering, and testing. As you develop more features, manually testing every feature becomes impossible over time. The number of bugs increases and the development cycle slows down. This post demonstrates how to automate your quality assurance efforts to increase the quality of your product and iterate faster.",[11,12],"qa","management",[],"Automate manual QA","Reduce manual QA","While Increasing Product Quality","Need a hand automating manual tests?","car-shift-pattern",[],{"type":21,"children":22,"toc":198},"root",[23,30,37,42,50,55,66,71,76,82,87,102,109,114,120,126,131,137,152,158,163,169,174,180,185],{"type":24,"tag":25,"props":26,"children":27},"element","p",{},[28],{"type":29,"value":9},"text",{"type":24,"tag":31,"props":32,"children":34},"h2",{"id":33},"why-reducing-manual-qa",[35],{"type":29,"value":36},"Why reducing manual QA",{"type":24,"tag":25,"props":38,"children":39},{},[40],{"type":29,"value":41},"Let’s take a look at a typical software development cycle with only manual QA.",{"type":24,"tag":25,"props":43,"children":44},{},[45],{"type":24,"tag":46,"props":47,"children":49},"img",{"alt":7,"src":48},"https://images.rightbalance.io/uploads/development_cycle_with_manual_qa.png",[],{"type":24,"tag":25,"props":51,"children":52},{},[53],{"type":29,"value":54},"Let’s say you have two teams, a software development team, and a QA team. Software engineers only write application code, the QA team tests the developed product. Once a new release is developed under phase 1, the software goes to the QA team. The QA team executes manual tests by going through the user interface and making sure the product works right in phase 2. If a bug is found in phase 3, the QA team tells the development team how to reproduce the bug. Sometimes a product manager is involved to prioritize bug fixes to go in certain releases. As you can see, it’s a complex process involving communication between developers and QA engineers on a regular basis. In addition to it, there are only so many manual tests that a human can execute per day.",{"type":24,"tag":56,"props":57,"children":59},"h3",{"id":58},"manual-qa-doesnt-scale-well",[60],{"type":24,"tag":61,"props":62,"children":63},"strong",{},[64],{"type":29,"value":65},"Manual QA doesn’t scale well",{"type":24,"tag":25,"props":67,"children":68},{},[69],{"type":29,"value":70},"As mentioned previously, what happens after you develop more features, a number of manual tests increases and teams usually make one of the following decisions. They either hire more QA staff or execute fewer tests. Unfortunately, most of the companies I’ve seen go with the second approach which causes bugs, loss of customers, and lost revenue.",{"type":24,"tag":25,"props":72,"children":73},{},[74],{"type":29,"value":75},"There is another way, have computers execute tests for you.",{"type":24,"tag":31,"props":77,"children":79},{"id":78},"what-are-automated-tests",[80],{"type":29,"value":81},"What are automated tests",{"type":24,"tag":25,"props":83,"children":84},{},[85],{"type":29,"value":86},"When you write a piece of software, you want to make sure it works correctly. Let’s say, you implemented a login screen in your mobile app. After you’re done with your task, you may go ahead, stand up the app and try logging into the system. After you move on to the next feature, you test the next feature in a similar way. As you develop more features, you can’t possibly test all features you developed to date. It will simply take you too much time to test every feature manually every time you change the code. What ends up happening is that you break previously developed functionality without even realizing it.",{"type":24,"tag":25,"props":88,"children":89},{},[90,92,100],{"type":29,"value":91},"That’s where ",{"type":24,"tag":93,"props":94,"children":97},"a",{"href":95,"title":96},"/solutions/automated-tests-get-dividends-with-every-test-run","Automated testing solution",[98],{"type":29,"value":99},"automated tests",{"type":29,"value":101}," come in. An automated test is a piece of code that executes a test. You write it once and execute it with one command any number of times you want. In the example of the login screen, you write a test that stands up the app and taps into a field with an invisible finger, enters some information, and checks that the user is successfully logged in.",{"type":24,"tag":25,"props":103,"children":104},{},[105],{"type":24,"tag":46,"props":106,"children":108},{"alt":7,"src":107},"https://images.rightbalance.io/uploads/development_cycle_with_automated_qa.png",[],{"type":24,"tag":25,"props":110,"children":111},{},[112],{"type":29,"value":113},"As you can see from the following diagram, all 3 steps of software development happen during the same development phase. It involves fewer people, lowers communication overhead, and increases quality (computers are more consistent at running tests than humans).",{"type":24,"tag":31,"props":115,"children":117},{"id":116},"how-to-automate-your-tests",[118],{"type":29,"value":119},"How to automate your tests",{"type":24,"tag":56,"props":121,"children":123},{"id":122},"product-managers-to-provide-clear-requirements",[124],{"type":29,"value":125},"Product Managers to provide clear requirements",{"type":24,"tag":25,"props":127,"children":128},{},[129],{"type":29,"value":130},"Developing and trying to automate an undefined product is very expensive. If requirements constantly change, both, the application code and automated tests need to be constantly rewritten. In addition to it, it’s tough to identify the best testing strategy if you don’t know what kind of product you’re building. Make sure your product manager provides clear acceptance criteria for every user story.",{"type":24,"tag":56,"props":132,"children":134},{"id":133},"engineers-write-unit-and-integration-tests",[135],{"type":29,"value":136},"Engineers write unit and integration tests",{"type":24,"tag":25,"props":138,"children":139},{},[140,142,150],{"type":29,"value":141},"The problem with a manual test is that you need to have a human executing it every single time which is expensive. If you automate your test, you spend a little more effort upfront by writing it. Then, you have your ",{"type":24,"tag":93,"props":143,"children":147},{"href":144,"rel":145},"https://en.wikipedia.org/wiki/Continuous_integration",[146],"nofollow",[148],{"type":29,"value":149},"continuous integration",{"type":29,"value":151}," servers running tests for you as many times and as often as you would like.",{"type":24,"tag":56,"props":153,"children":155},{"id":154},"dont-automate-every-single-thing",[156],{"type":29,"value":157},"Don’t automate every single thing",{"type":24,"tag":25,"props":159,"children":160},{},[161],{"type":29,"value":162},"It’s a delicate balance between what makes sense to automate and what doesn’t. You have to compare time cost vs benefit. In some cases, an integration test gives you the most bang for the buck. In some cases, it’s easier to test an isolated piece of logic with a unit test instead.",{"type":24,"tag":56,"props":164,"children":166},{"id":165},"qa-engineers-test-interactions-between-systems",[167],{"type":29,"value":168},"QA engineers test interactions between systems",{"type":24,"tag":25,"props":170,"children":171},{},[172],{"type":29,"value":173},"If your product consists of multiple systems (like a mobile front end, a web front end, multiple back-end services, etc), it’s important to test all pieces working together. Software engineers make sure every system is functioning correctly. However, it doesn’t really matter if each piece works as expected if the system as a whole doesn’t work. Cross-functional tests are the toughest to write. Make sure you automate the tests you execute most often manually first to be more efficient.",{"type":24,"tag":31,"props":175,"children":177},{"id":176},"conclusion",[178],{"type":29,"value":179},"Conclusion",{"type":24,"tag":25,"props":181,"children":182},{},[183],{"type":29,"value":184},"Automated tests are a great way to increase quality and iterate faster. If you keep your tests healthy, you can ship your software to production at any time. It allows you to move quicker, iterate and learn faster. Writing automated tests is an important skill for every software engineer. It takes some time to develop and it pays off big time. Every system is different. That’s why you need to constantly challenge yourself with writing fewer tests that cover more functionality.",{"type":24,"tag":25,"props":186,"children":187},{},[188,190],{"type":29,"value":189},"Originally posted on ",{"type":24,"tag":93,"props":191,"children":195},{"href":192,"rel":193,"title":194},"https://alextamoykin.com/how-to-reduce-manual-qa-increase-quality-of-your-product-and-iterate-faster",[146],"Original post from Alex Tamoykin",[196],{"type":29,"value":197},"alextamoykin.com",{"title":7,"searchDepth":199,"depth":199,"links":200},2,[201,205,206,212],{"id":33,"depth":199,"text":36,"children":202},[203],{"id":58,"depth":204,"text":65},3,{"id":78,"depth":199,"text":81},{"id":116,"depth":199,"text":119,"children":207},[208,209,210,211],{"id":122,"depth":204,"text":125},{"id":133,"depth":204,"text":136},{"id":154,"depth":204,"text":157},{"id":165,"depth":204,"text":168},{"id":176,"depth":199,"text":179},"markdown","content:learn:how-to-reduce-manual-qa-increase-product-quality-and-iterate-faster.md","content","learn/how-to-reduce-manual-qa-increase-product-quality-and-iterate-faster.md","md",1707100099050]